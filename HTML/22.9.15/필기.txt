회사 다니는 선임이나 근무자, 회사 github를 조사

a에 href가 #일 경우 페이지 최상단으로

############################
css selector 심화

속성 선택자

태그[속성이름]
- 해당 속성을 가지고 있는 태그
- 해당 속성에 대한 값이 아니라 속성만 가지고 있으면 됨

태그[속성이름="변수"]
- 속성값이 변수와 일치하는 태그

태그[속성이름~="변수"]
- 속성값이 변수를 하나의 완전한 단어로 포함하는 태그
- 공백을 기준으로 완전한 이름
- 앞뒤에 다른 단어 붙으면 안됨
- 캐스트 캐이딩

태그[속성^="변수"]
- 속성값이 변수로 시작하는 태그 선택
- 공백 구분 x

태그[속성$="변수"]
- 속성값이 변수로 끝나는 태그

태그[속성*="변수"]
- 속성값이 변수를 포함하는 태그
- 공백으로 구분하지 않음

태그[속성|="변수"]
- 속성값이 변수이거나
- 변수로 시작하면서 - 기호가 붙는 태그

** 가상 선택자 **

가상 클래스 선택자 : 클래스가 없는데 있는 것처럼 처리
- 콜론 1개

가상 요소 선택자 : 요소가 없는데 있는 것처럼 처리
- 콜론 2개

가상 클래스 선택자
- 가상 클래스 선택자는 클래스 없는 요소에 클래스 삽입

nth-child
- 0부터 시작하지 않음 1부터 시작
- n은 0부터 시작...?
- 2n은 짝수만
-- 테이블 같은 것들
- 키워드도 사용 가능
-- odd, even

class:first child
- 첫번째 선택자가 foo가 아닌 경우 선택이 안된다.
- 클래스를 가진 애들을 전부 잡는 것이 아니라 클래스를 가진 애들의 부모 기준으로 판단
- 블라인드로 감추는 경우에도 적용되지 않음

a:visited
- 사용자가 방문한 적이 있는 링크
- 바꿀 수 있는 스타일은 개인정보 보호를 위해 매우 제한적
- 어떤 사이트를 방문했는지 다른 사람이 알 수 있음

부정 가상 선택자
- li:not(.클래스명){ color: red;}
- 최신

상호 작용을 위한 가상 클래스
- hover
-- 마우스 오버 시
-- transition: all 0.5s;
--- 변화되는 모든 것들에 대해 0.5초의 간격을 주겠다
- active
-- 클릭 시
- focus
-- 요소에 포커스가 있을 때
-- 상호작용 할 수 있는 모든 요소
- checked
-- 선택한 상태의 라디오, 체크박스, 옵션 요소를 나타냄
-- css에서 +
--- 형제 관계에서

X + Y
- 인접 선택자로 부르는 선택자
- 앞의 요소 바로 뒤에 있는 요소만 선택

X ~ Y
- +는 바로 뒤에 오는 첫번째 요소만을 선택
- 아래의 모든 요소


가상 요소 선택자
- 가상 요소 선택자는 마크업 없는 요소를 삽입

접근성 고려사항
- CSS로 생성한 콘텐츠는 DOM이 포함되지 않고, 접근성 트리에도 들어가지 않음
- 브라우저 조합이 내용을 표한하지 않을 수 있음
- 콘텐츠가 포함한 정보가 페이지의 목적과 같아면 주 문서로 포함하는 것이 좋음


::before
- 요소의 맨 첫번째 자식으로 HTML코드에 존재하지 않는 가상요소를 하나 생성

::after
- 요소의 맨 마지막 자식으로 HTML코드에 존재하지 않는 가상요소를 하나 생성

단위를 가상 요소로 정하면 편하다

::selection
- 사용자가 선택하여 하이라이트 된 상태의 텍스트를 선택

##########################
CSS Combinator

div > p
- 직계 자식만

div p
- 자손

############################
Flex

외부 디스플레이 타입(inline, block, inline-block) : 부모와 형제 간의 박스 배치
내부 디스플레이 타입(flex 단방향, grid 양방향) : 내부 자식 박스 배치

flex란?
- display 속성
- Block 레벨 요소의 성질을 가지며 주로 부모의 속성을 통해 자식들을 컨트롤 
- 이때 부모를 Flex-container, 영향을 받는 자식들을 Flex-item이라고 부름

1차원 배열
- flex 우선 고려

2차원 배열
- grid 우선 고려

감성적인 생각 x
- 프로젝트에서 익스플로러를 몇 버전까지 호환할 것인가
- IE 9까지 호환하면 float만,,,

화면을 줄여도 같이 줄어듦
- 단점이 거의 없음

inline-flex는 블록 요소로 잡지 않고 인라인 요소로 잡기 떄문에 많이 사용하지 않음

reverse여도 스크린 리더는 순서대로 읽음
- 나중에 가중치 변경

justifu content
- 주축을 기준으로 배열의 위치 조정
- 축이 이동하고 늘어남
- space-between
-- 요소가 양 끝에 위치
- space around
-- 공간을 n개로 나누고 공간 가운데 요소 위치

Axis 와 Cross-Axis
- flex의 축과 수직인 축은 croll axis
- justify contetn
-- 축 정렬
- align-items
-- 교차 축 정렬

align-items
- 스트레치가 기본값
-- 부모의 높이를 갖게 됨

align-content
-  flex-container의 cross-axis 축의 아이템들이 여러 줄일 때 사용 가능
-  두 줄의 flex-wrap:wrap인 상태에서 사용해야 합니다.
- flex-wrap: wrap;을 부모에 설정하지 않으면 자식이 부모를 넘어감

flex-flow
- flex-direction과 flex-wrap은 같이 사용하는 일이 많기 때문에 flex-flow 속성을 통해 단축하여 사용할 수 있다

flex-item에 사용하는 속성

flex-basis
- flex-item의 크기를 지정
- width, height와 다른점은 axis 방향에 따라 달라진다는 것 그리고 내부의 컨텐츠에 따른 유연한 크기
- 기본값은 auto
- 설정한 높이를 넘어가도 이를 허용해줌
- width, height는 좀 더 강제적인 느낌
- flex-basis는 유연하 느낌
-- cross axis 방향

flex-grow
- flex-basis의 값에서 더 늘어나도 되는지 지정하는 값
- 할당된 값에 따라 flex-container의 남은 여백을 할당하도록 함
- 컨텐츠를 제외하고 남은 여백에 대한 비율
-- 전체 넓이가 아님
-- 여백이 다 사라지면 같아진다
-- width를 지정할 경우 화면에 나타나는 텍스트와 관계 없이 width를 기준으로 여백이 잡힘

flex-shrink

flex-basis 속성을 직접 사용하기 보다는 flex 축약 속성을 권장
- flex-basis, flex-grow, flex-shrink 3개를 묶어서 사용 가능

로고 - 메뉴를 space between으로





















