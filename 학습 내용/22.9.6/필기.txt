텍스트 레벨 시멘틱스

텍스르 레벨 요소의 특징
- 요소 안의 컨텐츠의 크기만큼만 영역을 점유한다
-- sections, grouping contents는 1줄을 차지한다
- 자식으로 sections, grouping contents를 가질 수 없다

주석의 목적
- 설명, 보류, 공유 등
- 실무에서는 안쓰는게 맞음, 불가피하게 코드에 대한 설명이 필요할 때만 사용
- 포트폴리오 작성시 주석 필요
-- 해당 부분이 어떤 역할을 하는지 명확하게 설명

얼마나 같이 협업을 잘 할 수 있을까

br
- 줄바꿈

wbr
- 문장이 부모영역보다 클 경우만 줄바꿈
- 원래는 줄바꿈이 일어나지 않지만 기본 설정 (white-space)설정 때문에 줄바뀜

<style>
    p {
        white-space: pre;
    }
</style>
와 pre태그는

한글은 라인브레이크가 글자단위
- 영어는 단어단위
- 기본 설정 값이 다름

a 태그
- 링크 만들때 사용
- 앵커의 경우 예외적으로 sections, grouping contents를 가질 수 있다
- a안에 a 불가, 브라우저에서 빠짐

- target 속성 -> 페이지가 열릴 창 선택 가능
- ./ -> 현재 프로젝트 내에서 이동
- # -> 해쉬 링크 (내부 링크, 태그된 id가 위치하는 곳으로 이동, 클래스 사용 불가)
-- html태그에서 scroll-behavior:sommth 속성을 추가하면 부드럽게 이동
- download 속성 -> 파일 다운로드
-- 파일 명 설정 가능
-- 우리가 설정하는 파일 포맷에 따라 브라우저가 변경해줌
- 전화번호
-- 브라우저가 연결할 수 있는 어플리케이션을 실행하려고 함
- 메일

b, strong
- b 태그는 의미가 없음
-- 더이상 사용하지 않음

i, em
- i 태그는 의미를 갖게 됨
-- 전문 용어, 구분
- em 태그
-- 강조, 기울임
-- strong와 같이 강조함, strong이 좀 더 강함

dfn
- 현재 문맥에서 정의하고 있는 용어를 나타냄
- dl, dt의 목록을 사용할 정도가 아닐 경우, 보통 1 ~ 2개
- 처음에 한번만 사용

abbr
- 준말, 약자

sup, sub
- 위첨자, 아래첨자
- 사용하면 글자 크기가 작아짐

span
- inline의 div
- 별다른 의미가 없음, div와 마찬가지로 최후의 수단
-- 디자인적으로 묶어야 할 때

##########################
모두의 html/css

홈 밑의 밑줄에 의미는 없음
- 보통 html로 하지는 않음

폰트는 이미지로
- 용량이 큼
- h1안에 img 넣으면 됨
-- 텍스트 넣을 필요 없이

버튼 안에도 버튼의 용도가 명시되어 있어야 함
- 버튼 안에 이미지가 들어간다면 alt에
-- 설명은 1번

ariticle을 쓸때 고민해야할 것
- 독립적인 기능을 가진 위젯인가? 혹은 어플리케이션인가?
- 다른 페이지에 들어가도 어색하지 않은가 

table은 데이터를 보여주어야 함

주소, 전화번호를 dt, dt, dd로 하고 dt는 숨기기
= 사이트 운영의 주체의 연락처도 address

폰트어썸..?

사용자 인터랙션 요소는 겹쳐지면 안된다

이미지와 설명의 내용이 같아면 하나를 생략해도 무방
- alt라는 속성은 유지해야 함

ol은 순서를 오름차순으로
- ui에서는 내림차순 -> ol의 reversed속성 이용
-- 숫자는 css로 제거 가능
-- start 속성 이용 가능

figure안에 여러 이미지 들어갈 수 잇음

input은 설명이 필요
- 무엇을 입력받는지

모달창이 뜨면 버튼
- 새로운 화면이 나오면 앵커

time의 datetime속성에 정확한 시간 입력

버튼 타입 summit이 기본
- 데이터 전송

반복되는 섹션은 js로

중요도 순서 고려해서 순서 결정
- more+ 버튼은 제일 마지막에
- 접근성 고려
-- 안에 있는 내용 파악 -> 이동 여부 결정, 더보기 여부 결정

캐러셀은 아티클?

#############################
|git clone repo주소 .
파일 수정이나 추가
git add .
git commit -m 'hello1'
git push

git pull
code -r {파일명} # VSC에서 파일 수정이나 추가 예시: code -r index.html
git add .
git commit -m 'hello2'
git push

git pull
파일 수정이나 추가
git add .
git commit -m 'hello3'
git push|

###########################
pixaboy

이미지
- 상업적 용도 사용가능
- 출처 안밝혀도 됨
- 사업적 용도로 사용하여 돈을 벌었는지가 주요 쟁점
- 사용을 하시지 않는 것을 권고

폰트
- 무료폰트(개인 무료 폰트, 상업 용도 무료 폰트)
- 대기업 무료 폰트
-- 한글은 제외
- 폰트는 저작권 확인하고 사용해야 함

img
- src 속성
-- 상대 경로, 절대 경로
-- 인터넷 링크도 가능

- alt 속성
-- 이미지가 보이지 않을 때 대신 출력
-- alt 값을 비우기 -> 스크린 리더 건너뜀
-- alt를 쓰지 않음 -> url 주소를 읽음

- srcset
-- 여러 해상도 대응 가능
-- 미리 이미지 지정

- sizes 속성
-- css에서 조절 가능
-- srcset을 사용하면 사용해야 함
-- min-width:960px 250px은 브ㄹ아ㅜ저의 넓이가 960px 이상이면 이미지의 크기를 250px로 해주겠다

협업 시 반응형 이미지를 어떠한 방법으로 처리했는지를 공유해야 함

pictiure
- 컨텐츠 자체의 크기 조절

type
- 위에서부터 탐색, 지원하지 않는 포맷이면 다음 source로 넘어감
- 포맷 찾아보고 사용하자

점진적 향상 기법
- 위와 유사한 크로스브라우징 기법

iframe
- MITN(중간자 공격)
-- 유저 인증
-- 유저 접속 지역 설정
-- iframe 막음
- 사용자 입력 iframe 태그는 막는 것이 좋음

비디오 탭 사용하지 말고 유튜브 활용
- 트래픽
- 오디오 역시 링크 활용

audio, video
- preload 속성
-- none, auto 주로 사용

- poster 속성
-- 영상이 로드되기 전에 대신해서 화면에 보여줄 이미지를 지정

모든 브라우저를 고려할 수 없음
- 사용자 경험이 90프로 이상인 브라우저만 크로스 브라우징

figure
- 뉴스. 신문, 온라인 잡지 회사

이미지를 스타일적으로 묶어야 할 때

결론부터 얘기해드리자면 해상도에 따라 '다른 이미지'를 보여주고 싶을 때에는 picture를, 같은 이미지인데 해상도에 따라 더 높은 해상도 이미지를 보여주고 싶을 때에는 srcset을 사용합니다.












