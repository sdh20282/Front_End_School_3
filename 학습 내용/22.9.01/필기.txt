github 강의자료에서 목차 ~3번까지
- 깃허브 강의는 인프런에 공유되어 있음
- 알잘딱깔센 github
- 30분 요약 강좌

pull
- 파일을 받아오는 것

add
- 파일을 대기열에 담는것

commit
- 비행기에 태우는 것

push
- 태운 것을 날려 보내는 것


코드를 받고자 하는 폴더에서 마우스 오른쪽 -> git bash 열기

git clone (github 주소) .
- .을 찍어줘야 새로운 폴더가 생성되지 않음

git add .
- 수정하거나 추가한 파일을 대기열에 담음
- 수정되거나 추가할 때마다 해줘야 함
- .은 바뀐 파일들을 모두 add하겠다는 뜻
- add 파일 명은 해당 팡리만

git commit -m '커밋 메시지, 항상 자세하게, 가능하면 한글로'
- 파일을 비행기에 태움
- 버전을 만듦
- commit의 단위는 기능
-- 기능이 완성될 때마다 commit

git push
- 파일을 업로드
- 로컬 파일을 github에 올리는 동작

git pull
- 수정한 파일을 받아옴
- clone과의 차이
-- clone은 remote 설정이 되지 않은 초기에만
-- 이후에는 pull

git은 버전관리 도구입니다. github은 git을 쉽게 쓰기 위한 gui를 지원하는 서비스

회서에서는 외부망인 GitHub대신 내부망에서도 사용할 수 있는 GitLab 사용

GUI
-Graphic User Interface
-마우스로 클릭~클릭~할수 있는 환경

CLI
-Command Line Interface
-회사서버의 90%이상은 리눅스 환경입니다. 
-FE개발자들은 유저(개념) 보다는 개발자이기에 터미널과 같이 백지로 작업할 경우가 많다.
-은행회사일 경우 VSC사용못할 경우도 많다. 구글링도 개인적으로 해야 할 경우도 많음
-명령어로만 작업!

touch
- 리눅스 파일 생성 명령어

깃허브에 관련 기술 찾아보기

mkdir
- 디렉토리 생성

cd
- 디렉토리 변경

touch
- 파일생성

vi
- 파일 수정
- i는 insert mode
- esc는 커맨드 입력
-- :wq -> write and quit
--- !뒤에 붙이면 오류 무시
- 실무는 vim 사용

cat
- 파일 읽기

rm
- 파일 삭제
- 주의
- -r 옵션 추가시 비어있지 않은 디렉토리 삭제 가능
 
rmdir
- 디렉토리 삭제
- 빈거만

ls
- 탐색
- ls -l == ll

.gitignore
- 해당 파일에 명시된 파일은 무시
- 환경 변수 등 중요한 파일들은 동룍해 놓아야 


git clone repo주소 .
파일 수정이나 추가
git add .
git commit -m 'hello1'
git push

git pull
파일 수정이나 추가
git add .
git commit -m 'hello2'
git push

git pull
파일 수정이나 추가
git add .
git commit -m 'hello3'
git push

웹 서비스 index.html 필수

웹 서비스
0. 기획자의 기획
1. url 구조 먼저 작성
- 백엔드 개발자
- 파일 구조
- index.html 사용 시 파일 이름 생략 가능
2. 모델 설계
- 백엔드 부분
- 게시판 (게시물 제목, 내용, 사진 등)
3. 디자이너가 디사진
4 templates 작성
- HTML 파일
5. model 설계한 것과 templages 연동



git clone repo주소 . : GitHub -> 로컬
파일 수정이나 추가
git add .                       : 로컬
git commit -m 'hello1'     : 로컬
git push                        : 로컬 -> GitHub

git pull : GitHub -> 로컬
파일 수정이나 추가
git add .                       : 로컬
git commit -m 'hello2'     : 로컬
git push                        : 로컬 -> GitHub

git clone repo주소 . : gitlab -> 로컬
파일 수정이나 추가
git add .                       : 로컬
git commit -m 'hello1'     : 로컬
git push                        : 로컬 -> gitlab 



git pull : gitlab -> 로컬
파일 수정이나 추가
git add .                       : 로컬
git commit -m 'hello2'     : 로컬
git push                        : 로컬 -> gitlab 


github에 연결할 수도, gitlab에 연결할 수도




